<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.batirplan.resrce.order.mapper.ReqMapper">
	
	<select id="getReqInfoByReqNo" resultType="kr.or.batirplan.resrce.order.vo.ReqVO">
		SELECT
			A.*,
			(SELECT empl_nm FROM tb_employee WHERE empl_code = A.reqstr_code ) AS reqstrNm,
			(SELECT ccpy_nm FROM tb_cooperation_company WHERE ccpy_code = A.suplr_code ) AS suplrNm
		FROM
			tb_request A
		WHERE
			req_no = #{param}
	</select>
	
	
	<update id="updateReqSttus">
		UPDATE
			tb_request
		SET
			req_sttus = '3'
		WHERE
			req_no = #{param}
	</update>
	
	<select id="gerReqInfoByReqNo" resultType="kr.or.batirplan.resrce.order.vo.ReqVO">
		select
			  tr.*
			, te.empl_nm	as reqstrNm
			, tc.ccpy_nm 	as suplrNm
		from
			tb_request tr
		LEFT OUTER JOIN
			tb_employee te
		ON
			tr.reqstr_code = te.empl_code
		LEFT OUTER JOIN
			tb_cooperation_company tc
		ON
			tr.suplr_code = tc.ccpy_code
		where
			req_no = #{param}
	</select>
	
	<select id="getOrderInfoByOrderNo" parameterType="string" resultType="kr.or.batirplan.resrce.order.vo.OrderVO">
		SELECT
			  tbo.*
			, te.empl_nm AS reqstrNm
		FROM
			tb_order tbo
		LEFT OUTER JOIN
			tb_employee te
		ON
			tbo.reqstr_code = te.empl_code
		WHERE
			tbo.ordr_no = #{param}
	</select>
	
	
	<sql id="searchSql">
		<if test="searchVO.reqType != null and searchVO.reqType != ''">
            AND req_type = #{searchVO.reqType}
        </if>
		<if test="searchVO.reqstrNm != null and searchVO.reqstrNm != ''">
            AND reqstr_code = (SELECT empl_code FROM tb_employee WHERE empl_nm LIKE '%' || #{searchVO.reqstrNm} || '%')
        </if>
		<if test="searchVO.suplrNm != null and searchVO.suplrNm != ''">
            AND suplr_code = (SELECT ccpy_code FROM tb_cooperation_company WHERE ccpy_nm LIKE '%' || #{searchVO.suplrNm} || '%')
        </if>
        <if test="searchVO.reqDateS != null and searchVO.reqDateS != ''">
            <![CDATA[
              AND req_date >= #{searchVO.reqDateS}
            ]]>
        </if>
        <if test="searchVO.reqDateE != null and searchVO.reqDateE != ''">
            <![CDATA[
              AND req_date <= #{searchVO.reqDateE}
            ]]>
        </if>
		<if test="searchVO.reqSttus != null and searchVO.reqSttus != ''">
            AND req_sttus = #{searchVO.reqSttus}
        </if>
	</sql>
	
	<select id="getReqCount" parameterType="kr.or.batirplan.resrce.order.vo.ReqSearchVO">
		SELECT
			COUNT(*)
		FROM
			tb_request
		where
			1=1
			<include refid="searchSql"/>
	</select>
	
	
	<select id="getReqList" parameterType="map" resultType="kr.or.batirplan.resrce.order.vo.ReqVO">
		/** kr.or.batirplan.resrce.order.mapper.ReqMapper-getReqList*/
		SELECT
		*
		FROM
		(
		SELECT
			ROWNUM AS rn, A.*
		FROM
		(SELECT                             
			  tr.req_no                     /*   */
			, tr.req_type                   /*   */
			, tr.req_date                   /*   */
			, tr.req_sttus                  /*   */
			, tr.suplr_code                 /*   */
			, tc.ccpy_nm 	as suplrNm      /*   */
			, tr.reqstr_code                /*   */
			, te.empl_nm	as reqstrNm     /*   */
			, tr.remarks                    /*   */
			, tr.cancel_reason              /*   */
		FROM
			tb_request tr
		LEFT OUTER JOIN 
			tb_employee te
		ON
			tr.reqstr_code = te.empl_code
		LEFT OUTER JOIN
			tb_cooperation_company tc
		ON
			tr.suplr_code = tc.ccpy_code
		WHERE
			1=1
			<include refid="searchSql"/>
		ORDER BY
			tr.req_no DESC) A
		)
		WHERE rn BETWEEN #{pagingVO.startRow} AND #{pagingVO.endRow}
	</select>
	
	
	<select id="getReqDetailsByReqNo" parameterType="String" resultType="kr.or.batirplan.resrce.order.vo.ReqDetailVO">
		SELECT
			  req_de_no
			, (
				SELECT
					ccpy_nm
				FROM
					tb_cooperation_company
				WHERE
					ccpy_code = (SELECT
									suplr_code
								FROM
									tb_request
								WHERE
									req_no = #{reqNo})
			) AS suplrNm
			, req_no
			, prdlst_no
			, (select prdlst_nm from tb_product_list B where A.prdlst_no = B.prdlst_no) AS prdlstNm
			, req_qty
			, unit_price
			, total_price
			, req_de_sttus
		FROM
			TB_REQUEST_DETAIL A
		WHERE
			req_no = #{reqno}
	</select>
	
	
	
	
	
	
	
	
	<select id="getPrdlstByCcpyCode" parameterType="String" resultType="kr.or.batirplan.resrce.product.vo.PrdlstVO">
		SELECT 
			  prdlst_no            /* 품목 번호 */
			, ccpy_code            /* 협력 업체 코드  */
			, ctgry_no             /* 카테고리 번호  */
			, prdlst_nm            /* 품목 이름  */
			, prdlst_stndrd        /* 품목 규격  */
			, prdlst_unit          /* 품목 단위 */
			, now_invntry_qy       /* 품목 현재 재고 */
			, safe_invntry_qy      /* 품목 안전 재고 */
			, prdlst_image_cours   /* 품목 품목 이미지 경로 */
			, prdlst_price         /* 품목 단가 */
		FROM
			tb_product_list	
		WHERE
			ccpy_code = #{param}
	</select>
	
	<insert id="insertReq" parameterType="kr.or.batirplan.resrce.order.vo.ReqVO">
	    <selectKey keyProperty="reqNo" resultType="String" order="BEFORE">
	        SELECT 'REQ-' 
	               || TO_CHAR(SYSDATE, 'YYYYMMDD') 
	               || '-' 
	               || LPAD(SEQ_REQUEST.NEXTVAL, 4, '0') AS reqNo
	        FROM DUAL
	    </selectKey>
		INSERT INTO tb_request (
				  req_no             /* 발주 요청 번호 */
				, req_type           /* 발주 요청 타입*/
				, suplr_code         /* 협력 업체 코드 */
				, reqstr_code        /* 발주 요청자 사원 코드 */
				)     
		VALUES (
				  #{reqNo}			
				, #{reqType}
				, #{suplrCode}
				, #{reqstrCode}
				)
	</insert>
	
	<insert id="insertReqDetail" parameterType="kr.or.batirplan.resrce.order.vo.ReqDetailVO">
		<selectKey keyProperty="reqDeNo" resultType="String" order="BEFORE">
	        SELECT 'REQDET-' 
	               || TO_CHAR(SYSDATE, 'YYYYMMDD') 
	               || '-' 
	               || LPAD(SEQ_REQUEST_DETAIL.NEXTVAL, 4, '0') AS reqDeNo
	        FROM DUAL
		</selectKey>
		INSERT INTO tb_request_detail (
				  req_de_no			 /* 발주 요청 상세 번호 */
				, req_no             /* 발주 요청 번호 */
				, prdlst_no			 /* 품목 번호 */
				, req_qty			 /* 수량 */
				, unit_price		 /* 단가 */
				, total_price		 /* 합계 금액 */
				)     
		VALUES (
				  #{reqDeNo}			
				, #{reqNo}			
				, #{prdlstNo}
				, #{reqQty}
				, #{unitPrice}
				, #{totalPrice}
				)
	</insert>
	
	
	<update id="setSafeInvntryQyByPrdlstNo" parameterType="kr.or.batirplan.resrce.order.vo.AutoReqVO">
		update TB_PRODUCT_LIST
		set
			safe_invntry_qy = #{safeInvntryQy}
		where
			prdlst_no = #{prdlstNo}
	</update>
	
<update id="setAutoReqByPrdlstNo" parameterType="kr.or.batirplan.resrce.order.vo.AutoReqVO">
    MERGE INTO tb_auto_order_product_list T
    USING (
        SELECT
            #{prdlstNo}     AS prdlst_no,
            #{dailyDemand}  AS daily_demand,
            #{leadTime}     AS lead_time,
            #{orderCost}    AS order_cost,
            #{holdingCost}  AS holding_cost
        FROM DUAL
    ) S
    ON (T.prdlst_no = S.prdlst_no)
    WHEN MATCHED THEN
        UPDATE SET
              T.daily_demand  = S.daily_demand,
              T.lead_time     = S.lead_time,
              T.order_cost    = S.order_cost,
              T.holding_cost  = S.holding_cost,
              T.auto_order_yn = 'Y'
    WHEN NOT MATCHED THEN
        INSERT (
              prdlst_no
            , daily_demand
            , lead_time
            , order_cost
            , holding_cost
            , auto_order_yn
        )
        VALUES (
              S.prdlst_no
            , S.daily_demand
            , S.lead_time
            , S.order_cost
            , S.holding_cost
            , 'Y'
        )
</update>

	
</mapper>